// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using MojaMuzickaLista.Database;

namespace MojaMuzickaLista.Migrations
{
    [DbContext(typeof(MuzickaListaContext))]
    [Migration("20210915150720_incijalna")]
    partial class incijalna
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.10")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("MojaMuzickaLista.Database.Kategorije", b =>
                {
                    b.Property<int>("KategorijaID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("nazivKategorije")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("KategorijaID");

                    b.ToTable("Kategorije");
                });

            modelBuilder.Entity("MojaMuzickaLista.Database.Pjesme", b =>
                {
                    b.Property<int>("PjesmaID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("DatumEditovanja")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DatumUnos")
                        .HasColumnType("datetime2");

                    b.Property<bool?>("Favorit")
                        .HasColumnType("bit");

                    b.Property<int>("KateogorijaID")
                        .HasColumnType("int");

                    b.Property<string>("NazivIzvodjaca")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NazivPjesme")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Ocjena")
                        .HasColumnType("int");

                    b.Property<string>("Url")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("PjesmaID");

                    b.HasIndex("KateogorijaID");

                    b.ToTable("Pjesme");
                });

            modelBuilder.Entity("MojaMuzickaLista.Database.Pjesme", b =>
                {
                    b.HasOne("MojaMuzickaLista.Database.Kategorije", "Kategorije")
                        .WithMany()
                        .HasForeignKey("KateogorijaID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Kategorije");
                });
#pragma warning restore 612, 618
        }
    }
}
